:root {
  --clr-main-bkg-1: hsl(222, 26%, 31%);
  --clr-kpd-bkg-1: hsl(223, 31%, 20%);
  --clr-scrn-bkg-1: hsl(224, 36%, 15%);

  --clr-main-key-var1-1: hsl(225, 21%, 49%);
  --clr-kpd-shdw-var1-1: hsl(224, 28%, 35%);

  --clr-main-key-var2-1: hsl(6, 63%, 50%);
  --clr-kpd-shdw-var2-1: hsl(6, 70%, 34%);

  --clr-main-key-var3-1: hsl(30, 25%, 89%);
  --clr-kpd-shdw-var3-1: hsl(28, 16%, 65%);

  --clr-txt-900-1: hsl(221, 14%, 31%);
  --clr-txt-100-1: hsl(0, 0%, 100%);

  --ff-primary: "League Spartan", sans-serif;
}

/* .toggle.theme-active {
} */

/* https://piccalil.li/blog/a-modern-css-reset */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* general styling */

body {
  font-family: var(--ff-primary);
}

main {
  display: grid;
  place-content: center;
}
.calc-body {
  background: var(--clr-main-bkg-1);
  min-width: 30rem;
  padding: 1rem;
  margin-block: 4rem;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

header h1 {
  font-size: 1rem;
  color: var(--clr-txt-900-1-1);
  font-weight: 700;
}

.theme {
  gap: 0.7rem;
  padding-inline: 0.5rem;
  justify-content: start;
  align-items: center;
}

.theme p {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 0.5rem;
  color: var(--clr-txt-900-1-1);
}

.toggle-btns {
  display: flex;
  gap: 1rem;
  background: var(--clr-kpd-bkg-1);
  padding: 0.5rem;
  border-radius: 1000vh;
}

.toggle {
  height: 10px;
  width: 10px;
  border: none;
  background: none;
  border-radius: 50%;
  position: relative;
  transition: all 0.15s;
}

.toggle:hover,
.toggle:focus {
  transform: scale(1.15);
  background-color: var(--clr-main-key-var2-1);
}
.toggle::before {
  position: absolute;
  top: -22px;
  right: 2px;
  cursor: pointer;
  font-weight: bold;
  font-size: 0.5rem;
  color: var(--clr-txt-900-1-1);
}

.theme-active.toggle::before {
  transform: scale(1.06);
}

.toggle:nth-child(1)::before {
  content: "1";
}

.toggle:nth-child(2)::before {
  content: "2";
}

.toggle:nth-child(3)::before {
  content: "3";
}

/* screen */

.screen {
  display: flex;
  justify-content: end;
  align-items: center;
  font-size: 3rem;
  font-weight: 700;
  height: 5rem;
  background-color: var(--clr-scrn-bkg-1);
  border-radius: 5px;
  color: var(--clr-txt-900-1);
  padding: 2rem;
}

/* calcuiator */
.calculator {
  background: var(--clr-kpd-bkg-1);
  margin-block: 1rem;
  padding-block: 1rem;
  padding-inline: 1rem;
  border-radius: 5px;
  grid-gap: 1rem;
}

.keypad {
  text-align: center;
  padding: 1rem;
  border-radius: 5px;
  font-weight: 900;
  font-size: 2rem;
  text-transform: uppercase;
  cursor: pointer;
  background: var(--clr-main-key-var3-1);
  color: var(--clr-txt-900-1);
  box-shadow: 0px 4px 3px var(--clr-kpd-shdw-var3-1);
  transition: all 0.35s;
}

.keypad:hover,
.keypad:focus {
  transform: scale(1.05);
}

.keypad:active {
  box-shadow: inset 0px 3px 2px var(--clr-kpd-shdw-var3-1),
    0px 2px 1px var(--clr-kpd-shdw-var3-1);
}

.calculator .mainkey1 {
  background: var(--clr-main-key-var1-1);
  box-shadow: 0px 4px 3px var(--clr-kpd-shdw-var1-1);
}

.calculator .mainkey2 {
  background: var(--clr-main-key-var2-1);
  box-shadow: 0px 4px 3px var(--clr-kpd-shdw-var2-1);
}

/* keypads */

.seven {
  grid-area: num7;
}

.eight {
  grid-area: num8;
}

.nine {
  grid-area: num9;
}

.del {
  grid-area: del;
}

.four {
  grid-area: num4;
}

.five {
  grid-area: num5;
}

.six {
  grid-area: num6;
}

.add {
  grid-area: add;
}

.one {
  grid-area: num1;
}

.two {
  grid-area: num2;
}

.three {
  grid-area: num3;
}

.minus {
  grid-area: minus;
}

.decimal {
  grid-area: decimal;
}

.zero {
  grid-area: num0;
}

.divide {
  grid-area: divide;
}

.multiplicate {
  grid-area: multiply;
}

.reset {
  grid-area: reset;
}

.equals {
  grid-area: equals;
}

.isDepressed {
  filter: invert(120%);
}
/* utility classes */

.container {
  --max-width: 1440px;
  --container-padding: 1.5rem;
  width: min(var(--max-width), 100% - var(--container-padding) * 2);
  margin-inline: auto;
  max-height: 100vh;
  background: var(--clr-main-bkg-1);
}

.grid {
  display: grid;
  grid-template-areas:
    "num7 num8 num9 del"
    "num4 num5 num6 add"
    "num1 num2 num3 minus"
    "decimal num0 divide multiply"
    "reset reset equals equals";
}

.flex {
  display: flex;
}

.padding-block-100 {
  padding-block: 0.5rem;
}

/* .flow * + * {
  margin-bottom: var(--flow-spacer, 1.5rem);
}
 */

/* :where(.flow :not(:first-child)) {
  margin-top: var(--flow-spacer, 3em);
} */
